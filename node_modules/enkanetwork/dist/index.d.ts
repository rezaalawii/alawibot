import { FetchUserUID, FetchUserProfile, FetchProfileInfo, FetchProfileAccount } from "./models/index";
import { TLanguage } from "./types";
export declare class EnkaNetwork {
    language: TLanguage;
    private readonly request;
    private readonly cache?;
    constructor(data: {
        language?: TLanguage;
        caching?: boolean;
        userAgent?: string | boolean;
    });
    /**
     * Fetch user by uid from the game.
     * @param {number} uid `UID` from the game.
     * @param {string} language The language to be used in the localization of names (characters, artifacts, etc.). Default is EnkaNetwork.language.
     */
    fetchPlayerInfo(uid: number, language?: TLanguage): Promise<FetchProfileInfo>;
    /**
     * Fetch user by uid from the game.
     * @param {number} uid `UID` from the game.
     * @param {string} language The language to be used in the localization of names (characters, artifacts, etc.). Default is EnkaNetwork.language.
     */
    fetchUser(uid: number, language?: TLanguage): Promise<FetchUserUID>;
    /**
     * Fetch enkaProfile by username from the site.
     * @param {string} username `username` from the site.
     */
    fetchProfile(username: string): Promise<FetchUserProfile>;
    /**
     * Fetch enkaProfile accounts by username from the site.
     * @param {string} username `username` from the site.
     */
    fetchProfileAccounts(username: string, language?: TLanguage): Promise<FetchProfileAccount[]>;
    /**
     * Fetch enkaProfile account by username and account hash from the site.
     * @param {string} username `username` from the site.
     * @param {string} hash account `hash` from the account.
     */
    fetchProfileAccount(username: string, hash: string, language?: TLanguage): Promise<FetchProfileAccount>;
}
